{"componentChunkName":"component---src-templates-blog-post-js","path":"/es/blog/variables-and-types-js/","result":{"data":{"markdownRemark":{"html":"<h2>¿Que son variables?</h2>\n<p>Las variables son contenedores que contienen data reusable es básicamente la unidad de almacenamiento en Javascript.</p>\n<h2>Declaración de variables</h2>\n<p>Las variables en Js pueden ser declaradas con las palabras reservadas <code class=\"language-text\">const</code>, <code class=\"language-text\">let</code> y <code class=\"language-text\">var</code>.</p>\n<h3>let</h3>\n<p>Es una variable que te permite reasignar su valor cuantas veces sea necesario y su scope será el bloque de código donde sea declarada, decir todo lo que esté dentro de llaves <code class=\"language-text\">{}</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`let newVariable`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> newVariable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>const</h3>\n<p>Es una variable como su nombre lo dice constante, es decir no puede ser reasignado y su scope al igual que let será el bloque de código donde es declarada.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const newVariable;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newVariable<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>var</h3>\n<p>Es una variable que también puede ser reasignada y tiene un comportamiento parecido a <code class=\"language-text\">let</code>, pero tienen una importante diferencia, que esta no depende del bloque donde se es declarada, sino a nivel de funciones.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`var newVariable`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> newVariable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Inicialización de variables</h2>\n<p>Después de declarar una variable se debe asignar un valor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const newVariable = 0`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newVariable <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Reasignación de variable</h2>\n<p>Se puede asignar un valor distinto a una variable, de la siguiente manera.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`let newVariable = 0\n\nnewVariable = 24`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> newVariable <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nnewVariable <span class=\"token operator\">=</span> <span class=\"token number\">24</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Reglas en declaración de variables</h2>\n<ol>\n<li>El nombre debe empezar con letras (a hasta z), piso (_) o signo del dolar ($).</li>\n<li>Después de la primera letra se pueden usar números.</li>\n<li>Las variables distinguen entre mayuscula y minuscula, es decir <code class=\"language-text\">const x</code> y <code class=\"language-text\">const X</code> son diferentes variables.</li>\n</ol>\n<h2>CamelCase convención</h2>\n<p>Es importante saber que no es un regla estricta sino por convención general, que las variables deben empezar con una letra minúscula y si es el nombre es una palabra compuesta, se debe escribir la primera palabra con letra mayúscula.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const palabraCompuesta = 0`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> palabraCompuesta <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>¿Que es hoisting?</h2>\n<p>Conceptualmente el hoisting es el comportamiento que se le da a las variables declaradas por <code class=\"language-text\">var</code> y funciones cuando estas son movidas físicamente al principio del código, técnicamente no pasa de manera literal, sino que al momento de JS compilar, estos son procesados en un orden distinto.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function hello(condition) {\n  if (condition) {\n    let nameToPrint = &quot;Cinthia&quot;\n    console.log(nameToPrint)\n  } else {\n    let nameToPrint = &quot;Gerardo&quot;\n    console.log(nameToPrint) // La consola imprime “Gerardo”\n  }\n\n  console.log(nameToPrint, &quot;outside of blocks&quot;) // La consola muestra un error\n}\n\nhello(false)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Cinthia\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Gerardo\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span> <span class=\"token comment\">// La consola imprime “Gerardo”</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">,</span> <span class=\"token string\">\"outside of blocks\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// La consola muestra un error</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Tenemos una función que imprime un nombre, dependiendo del valor de su parámetro (true o false) , si es true imprime <code class=\"language-text\">Cinthia</code> si es false imprime <code class=\"language-text\">Gerardo</code>, nuestros 2 primeros <code class=\"language-text\">console.log</code> imprimen la respuesta, pero el tercero muestra un error, ya que nuestro <code class=\"language-text\">console.log</code> se encuentra en el scope de la función, no del <code class=\"language-text\">if</code>, por lo tanto no tiene acceso al valor de las variables, esto pasa con variables <code class=\"language-text\">const</code> y <code class=\"language-text\">let</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function hello(condition) {\n  if (condition) {\n    var nameToPrint = &quot;Cinthia&quot; // La consola imprime “Cinthia”\n    console.log(nameToPrint)\n  } else {\n    var nameToPrint = &quot;Gerardo&quot;\n    console.log(nameToPrint)\n  }\n\n  console.log(nameToPrint, &quot;outside of blocks&quot;) // La consola imprime &quot;Gerardo&quot; &quot;outside of blocks&quot;\n}\n\nhello(true)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Cinthia\"</span> <span class=\"token comment\">// La consola imprime “Cinthia”</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Gerardo\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">,</span> <span class=\"token string\">\"outside of blocks\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// La consola imprime \"Gerardo\" \"outside of blocks\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, cambiamos nuestro argumento a true, y ahora nuestro ejercicio imprime <code class=\"language-text\">Cinthia</code>, y cambiamos nuestros <code class=\"language-text\">let</code> por <code class=\"language-text\">var</code>, y podemos observar que como nuestras variables ahora están disponibles a nivel de función, ahora nuestro <code class=\"language-text\">console.log</code> si tiene acceso y muestra un resultado.</p>\n<h2>Tipos de valores</h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`Undefined = &quot;Es un valor primitivo el cual se le asigna a variables que no se les ha identificado un valor&quot;.\n\nBoolean: &quot;Es un tipo de valor de data lógico que solo puede valer true o false&quot;\n\nNumber: &quot;Es un tipo de data numérico&quot;\n\nString: &quot;Es una secuencia de caracteres usados para representar texto&quot;\n\nNull: &quot;Es un valor primitivo&quot;\n\nFunction: &quot;Es un conjunto de declaraciones que realiza una tarea o calcula un valor&quot;\n\nObject: &quot;Es un tipo de dato en Js  y es usado para almacenar colección de información&quot;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">Undefined <span class=\"token operator\">=</span> <span class=\"token string\">\"Es un valor primitivo el cual se le asigna a variables que no se les ha identificado un valor\"</span><span class=\"token punctuation\">.</span>\n\nBoolean<span class=\"token operator\">:</span> <span class=\"token string\">\"Es un tipo de valor de data lógico que solo puede valer true o false\"</span>\n\nNumber<span class=\"token operator\">:</span> <span class=\"token string\">\"Es un tipo de data numérico\"</span>\n\nString<span class=\"token operator\">:</span> <span class=\"token string\">\"Es una secuencia de caracteres usados para representar texto\"</span>\n\nNull<span class=\"token operator\">:</span> <span class=\"token string\">\"Es un valor primitivo\"</span>\n\nFunction<span class=\"token operator\">:</span> <span class=\"token string\">\"Es un conjunto de declaraciones que realiza una tarea o calcula un valor\"</span>\n\nObject<span class=\"token operator\">:</span> <span class=\"token string\">\"Es un tipo de dato en Js  y es usado para almacenar colección de información\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Typeof</h2>\n<p>Es un operador que retorna a string indicando el tipo del operando no evaluado.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`console.log(typeof 42)\n// se imprime en consola tipo: &quot;number&quot;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// se imprime en consola tipo: \"number\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Truthy y Falsy Valores</h2>\n<h3>Truthy</h3>\n<p>En Js un valor truthy es un valor considerado true cuando se encuentra en un <code class=\"language-text\">boolean</code> context. Todos los valores son truthy a menos que sean definidos como falsy.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`if (true)\nif ({})\nif ([])\nif (42)\nif (&quot;0&quot;)\nif (&quot;false&quot;)\nif (new Date())\nif (-42)\nif (12n)\nif (3.14)\nif (-3.14)\nif (Infinity)\nif (-Infinity)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12n</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Falsy</h3>\n<p>Es un valor que es considerado falso cuando se encuentra en un contexto <code class=\"language-text\">boolean</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`False: false\n0: numero zero\n-0: numero negativo zero\n0n:\n&quot;&quot;: string vacio\nNull: null - la ausencia de valor\nUndefined: undefined - valor primitivo\nNaN: NaN - no es un número`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">False<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token number\">0</span><span class=\"token operator\">:</span> numero zero\n<span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> numero negativo zero\n<span class=\"token number\">0n</span><span class=\"token operator\">:</span>\n<span class=\"token string\">\"\"</span><span class=\"token operator\">:</span> string vacio\nNull<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">-</span> la ausencia de valor\nUndefined<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">-</span> valor primitivo\n<span class=\"token number\">NaN</span><span class=\"token operator\">:</span> <span class=\"token number\">NaN</span> <span class=\"token operator\">-</span> no es un número</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"¿Que son variables? Las variables son contenedores que contienen data reusable es básicamente la unidad de almacenamiento en Javascript. Declaración de…","frontmatter":{"title":"¿Qué son las variables y cuáles son sus tipos en javascript?","description":null,"featuredImage":{"childImageSharp":{"fluid":{"src":"/static/845a80eb33137a53b964b304f76f3d65/ee604/variables-es.png"},"resize":{"src":"/static/845a80eb33137a53b964b304f76f3d65/f3583/variables-es.png","height":675,"width":1200}}}},"fields":{"langKey":"es"}}},"pageContext":{"slug":"/es/blog/variables-and-types-js/","langKey":"es"}}}