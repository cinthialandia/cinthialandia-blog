{"componentChunkName":"component---src-templates-blog-post-js","path":"/es/blog/life-cycles-and-hooks/","result":{"data":{"markdownRemark":{"html":"<h2>¿Qué son los ciclos de vida en React?</h2>\n<p>Se podrían definir como una serie de métodos que son invocados en diferentes estados de la existencia del componente.</p>\n<p>Vamos a explicar los ciclos de vida más utilizados realizando un countdown.</p>\n<p>Tenemos un pomodoro Clock, que tiene un input, en el cual se podrá escribir la cantidad de minutos que durará el countdown clock, en el mismo se encontrará 3 botones; el botón play el cual comenzará el conteo del reloj, un botón de pause para parar el contador en cualquier momento, y finalmente el botón de rewind que reiniciara el countdown a 5 minutos el cual será su valor por defecto.</p>\n<blockquote>\n<p>Para este ejercicio, estaremos utilizando, la librería <code class=\"language-text\">tiny-timer</code>, esta recibe, el tiempo que se desea ser contado, y realizará la lógica de regresarnos la cantidad de milisegundos, que nos quedan para que ese tiempo se cumpla.</p>\n</blockquote>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { Component, useState, useMemo, useEffect } from &quot;react&quot;\nimport { render } from &quot;react-dom&quot;\nimport Timer from &quot;tiny-timer&quot;\nimport &quot;./style.css&quot;\n\nconst convertMinutestoMilliseconds = minutes => {\n  // adding 1 second to &quot;show the 00:00&quot;\n  return Math.floor(minutes * 60 * 1000) + 1000\n}\n\nconst convertMillisecondsToTime = ms => {\n  const timeAPI = {\n    MINUTES: 1000 * 60,\n    SECONDS: 1000,\n  }\n\n  if (ms <= 0) {\n    return {\n      minutes: \\`00\\`,\n      seconds: \\`00\\`,\n    }\n  }\n\n  const minutes = Math.floor(ms / timeAPI.MINUTES)\n  ms %= timeAPI.MINUTES\n  // substracting 1 to show the &quot;00:00&quot;\n  let seconds = Math.round(ms / timeAPI.SECONDS)\n\n  if (seconds > 0) {\n    seconds = seconds - 1\n  }\n\n  return {\n    minutes: minutes.toString().padStart(2, &quot;0&quot;),\n    seconds: seconds.toString().padStart(2, &quot;0&quot;),\n  }\n}\n\nfunction App() {\n  const [timeInMinutes, setTimeInMinutes] = useState(5)\n  const [timeInMiliseconds, setTimeInMiliseconds] = useState(\n    convertMinutestoMilliseconds(5)\n  )\n  const [timeLeft, setTimeLeft] = useState({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  // a force render hack :)\n  const [_, forceRender] = useState([])\n\n  const handleChange = e => {\n    console.log(e)\n    const minutes = e.target.value\n    const miliseconds = convertMinutestoMilliseconds(minutes)\n    setTimeInMinutes(minutes)\n    setTimeInMiliseconds(miliseconds)\n  }\n\n  const handlePlay = () => {\n    if (timer.status === &quot;paused&quot;) {\n      timer.resume()\n      return\n    }\n    timer.start(timeInMiliseconds)\n  }\n\n  const handlePause = () => {\n    timer.pause()\n    forceRender([])\n  }\n\n  const handleRewind = () => {\n    timer.stop()\n    setTimeInMinutes(5)\n    setTimeInMiliseconds(convertMinutestoMilliseconds(5))\n    setTimeLeft({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  }\n\n  return (\n    <div>\n      <h2>Pomodoro Clock!</h2>\n      <div>\n        {timeLeft.minutes}:{timeLeft.seconds}\n      </div>\n      <input onChange={handleChange} type=&quot;text&quot; value={timeInMinutes} />\n\n      <button onClick={handlePause}>Pause</button>\n\n      <button onClick={handlePlay}>Play</button>\n\n      <button onClick={handleRewind}>Rewind</button>\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById(&quot;root&quot;))`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">,</span> useMemo<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n<span class=\"token keyword\">import</span> Timer <span class=\"token keyword\">from</span> <span class=\"token string\">\"tiny-timer\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./style.css\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMinutestoMilliseconds</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">minutes</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// adding 1 second to \"show the 00:00\"</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMillisecondsToTime</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">ms</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> timeAPI <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">MINUTES</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SECONDS</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ms <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      minutes<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      seconds<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span>\n  ms <span class=\"token operator\">%=</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span>\n  <span class=\"token comment\">// substracting 1 to show the \"00:00\"</span>\n  <span class=\"token keyword\">let</span> seconds <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    minutes<span class=\"token operator\">:</span> minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    seconds<span class=\"token operator\">:</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMinutes<span class=\"token punctuation\">,</span> setTimeInMinutes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMiliseconds<span class=\"token punctuation\">,</span> setTimeInMiliseconds<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeLeft<span class=\"token punctuation\">,</span> setTimeLeft<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// a force render hack :)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> forceRender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n    <span class=\"token keyword\">const</span> miliseconds <span class=\"token operator\">=</span> <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span>miliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePlay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"paused\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timer<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>timeInMiliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePause</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">forceRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleRewind</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span><span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pomodoro Clock!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>minutes<span class=\"token punctuation\">}</span><span class=\"token plain-text\">:</span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>seconds<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>timeInMinutes<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePause<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pause</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePlay<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Play</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRewind<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Rewind</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Comenzamos realizando el input y los 3 botones a utilizar, los cuales los 4 se les asigna una función <code class=\"language-text\">onClick</code> y <code class=\"language-text\">onchange</code>que escucharan los eventos de cambios realizados en estos elementos. En los botones play y pause, tenemos un if, el cual decidirá qué botón mostrar de acuerdo al estado del countdown.</p>\n<p>Nuestro componente funcional, tiene 4 estados, el tiempo en minutos, tiempo en milisegundos, ambos con valores predeterminados, un objeto con el tiempo restantes en minutos y segundos los cuales serán mostrados en pantalla, en finalmente un pequeño hack, es un estado que renderiza cada vez que nuestra función <code class=\"language-text\">handlePause</code> es llamada</p>\n<p>Nuestra función <code class=\"language-text\">handleChange</code> se encarga de escuchar el evento del cambio de minutos en el input, en el mismo se llama a la función encargada de convertir minutos a milisegundos, además de cambiar en el estado, los nuevos minutos y los milisegundos del nuevo tiempo.</p>\n<p>Nuestra función <code class=\"language-text\">handlePlay</code>, se encarga de escuchar el evento de click al botón play, primero verificamos, que si nuestro timer (creado anteriormente) su estatus es igual a <code class=\"language-text\">pause</code> de ser así, volvemos a correr el countdown con el tiempo restante. Si no comenzará el countdown con la cantidad de minutos requerido.</p>\n<p>Nuestra función <code class=\"language-text\">handlePause</code>, se encargará de escuchar el evento de click al botón pause, y pausar el countdown. En esta función utilizamos el método <code class=\"language-text\">forceUpdate()</code> el cual se encarga de renderizar el componente para actualizar, esto permitirá que nuestro countdown pueda correr de nuevo.</p>\n<p>Y finalmente tenemos nuestra funcion <code class=\"language-text\">handleRewind</code>, esta se encargará primeramente de parar por completo el countdown y actualizamos el estado, con todos los valores por defecto.</p>\n<h2>Componentes funcionales y ciclos de vida</h2>\n<h3>useMemo()</h3>\n<p>Es un Hook que es utilizado para crear un valor a guardar y la misma devuelve un valor guardado, por ejemplo a veces debemos calcular un valor, por medio funciones complejas las cuales llegan a ser pesadas, por lo tanto con este hook, esta operación solo se realiza una sola vez, luego el valor del mismo, se almacenará y la próxima vez que se desee hacer referencia a él, se obtendrá mucho más rápido.</p>\n<p>En este ejercicio, creamos una instancia del nuevo timer (librería que estamos usando), pero lo crearemos dentro de este hook, para que el valor de la variable, no se reescribe cada vez que el componente renderice, sino que se mantenga el valor del mismo.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { Component, useState, useMemo, useEffect } from &quot;react&quot;\nimport { render } from &quot;react-dom&quot;\nimport Timer from &quot;tiny-timer&quot;\nimport &quot;./style.css&quot;\n\nconst convertMinutestoMilliseconds = minutes => {\n  // adding 1 second to &quot;show the 00:00&quot;\n  return Math.floor(minutes * 60 * 1000) + 1000\n}\n\nconst convertMillisecondsToTime = ms => {\n  const timeAPI = {\n    MINUTES: 1000 * 60,\n    SECONDS: 1000,\n  }\n\n  if (ms <= 0) {\n    return {\n      minutes: \\`00\\`,\n      seconds: \\`00\\`,\n    }\n  }\n\n  const minutes = Math.floor(ms / timeAPI.MINUTES)\n  ms %= timeAPI.MINUTES\n  // substracting 1 to show the &quot;00:00&quot;\n  let seconds = Math.round(ms / timeAPI.SECONDS)\n\n  if (seconds > 0) {\n    seconds = seconds - 1\n  }\n\n  return {\n    minutes: minutes.toString().padStart(2, &quot;0&quot;),\n    seconds: seconds.toString().padStart(2, &quot;0&quot;),\n  }\n}\n\nfunction App() {\n  const [timeInMinutes, setTimeInMinutes] = useState(5)\n  const [timeInMiliseconds, setTimeInMiliseconds] = useState(\n    convertMinutestoMilliseconds(5)\n  )\n  const [timeLeft, setTimeLeft] = useState({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  // a force render hack :)\n  const [_, forceRender] = useState([])\n\n  const timer = useMemo(() => new Timer(), [])\n\n  const handleChange = e => {\n    console.log(e)\n    const minutes = e.target.value\n    const miliseconds = convertMinutestoMilliseconds(minutes)\n    setTimeInMinutes(minutes)\n    setTimeInMiliseconds(miliseconds)\n  }\n\n  const handlePlay = () => {\n    if (timer.status === &quot;paused&quot;) {\n      timer.resume()\n      return\n    }\n    timer.start(timeInMiliseconds)\n  }\n\n  const handlePause = () => {\n    timer.pause()\n    forceRender([])\n  }\n\n  const handleRewind = () => {\n    timer.stop()\n    setTimeInMinutes(5)\n    setTimeInMiliseconds(convertMinutestoMilliseconds(5))\n    setTimeLeft({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  }\n\n  return (\n    <div>\n      <h2>Pomodoro Clock!</h2>\n      <div>\n        {timeLeft.minutes}:{timeLeft.seconds}\n      </div>\n      <input onChange={handleChange} type=&quot;text&quot; value={timeInMinutes} />\n\n      <button onClick={handlePause}>Pause</button>\n\n      <button onClick={handlePlay}>Play</button>\n\n      <button onClick={handleRewind}>Rewind</button>\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById(&quot;root&quot;))`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">,</span> useMemo<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n<span class=\"token keyword\">import</span> Timer <span class=\"token keyword\">from</span> <span class=\"token string\">\"tiny-timer\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./style.css\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMinutestoMilliseconds</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">minutes</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// adding 1 second to \"show the 00:00\"</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMillisecondsToTime</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">ms</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> timeAPI <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">MINUTES</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SECONDS</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ms <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      minutes<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      seconds<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span>\n  ms <span class=\"token operator\">%=</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span>\n  <span class=\"token comment\">// substracting 1 to show the \"00:00\"</span>\n  <span class=\"token keyword\">let</span> seconds <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    minutes<span class=\"token operator\">:</span> minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    seconds<span class=\"token operator\">:</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMinutes<span class=\"token punctuation\">,</span> setTimeInMinutes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMiliseconds<span class=\"token punctuation\">,</span> setTimeInMiliseconds<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeLeft<span class=\"token punctuation\">,</span> setTimeLeft<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// a force render hack :)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> forceRender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n    <span class=\"token keyword\">const</span> miliseconds <span class=\"token operator\">=</span> <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span>miliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePlay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"paused\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timer<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>timeInMiliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePause</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">forceRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleRewind</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span><span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pomodoro Clock!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>minutes<span class=\"token punctuation\">}</span><span class=\"token plain-text\">:</span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>seconds<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>timeInMinutes<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePause<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pause</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePlay<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Play</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRewind<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Rewind</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>useEffect()</h3>\n<p><code class=\"language-text\">useEffect</code> hook es una función que te permite tener efectos secundarios en el componente funcional. En los componentes de clases tenemos los métodos de ciclos de vida <code class=\"language-text\">componentDidMount</code>, <code class=\"language-text\">componentDidUpdate</code> y <code class=\"language-text\">componentWillUnmount</code>, este hook engloba las funcionalidades de estos 3 métodos en los componentes funcionales.</p>\n<p>En el ejemplo, tenemos el <code class=\"language-text\">useEffect</code>en el cual se está inicializando el el countdown, este nos regresa la cantidad de milisegundos faltantes y actualizamos el estado con la cantidad de milisegundos faltante y eliminamos todos los listener del componente, esta funcion cumple con los métodos <code class=\"language-text\">componentDidMount</code> y <code class=\"language-text\">componentWillUnmount</code>.</p>\n<p>En el próximo <code class=\"language-text\">useEffect</code>, estamos actualizando el estado con el tiempo faltante que se mostrará en pantalla, y este se actualizará cada vez que que el tiempo en milisegundos cambie, esta función, está realizando la misma funcion del metodo <code class=\"language-text\">componentDidUpdate</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { Component, useState, useMemo, useEffect } from &quot;react&quot;\nimport { render } from &quot;react-dom&quot;\nimport Timer from &quot;tiny-timer&quot;\nimport &quot;./style.css&quot;\n\nconst convertMinutestoMilliseconds = minutes => {\n  // adding 1 second to &quot;show the 00:00&quot;\n  return Math.floor(minutes * 60 * 1000) + 1000\n}\n\nconst convertMillisecondsToTime = ms => {\n  const timeAPI = {\n    MINUTES: 1000 * 60,\n    SECONDS: 1000,\n  }\n\n  if (ms <= 0) {\n    return {\n      minutes: \\`00\\`,\n      seconds: \\`00\\`,\n    }\n  }\n\n  const minutes = Math.floor(ms / timeAPI.MINUTES)\n  ms %= timeAPI.MINUTES\n  // substracting 1 to show the &quot;00:00&quot;\n  let seconds = Math.round(ms / timeAPI.SECONDS)\n\n  if (seconds > 0) {\n    seconds = seconds - 1\n  }\n\n  return {\n    minutes: minutes.toString().padStart(2, &quot;0&quot;),\n    seconds: seconds.toString().padStart(2, &quot;0&quot;),\n  }\n}\n\nfunction App() {\n  const [timeInMinutes, setTimeInMinutes] = useState(5)\n  const [timeInMiliseconds, setTimeInMiliseconds] = useState(\n    convertMinutestoMilliseconds(5)\n  )\n  const [timeLeft, setTimeLeft] = useState({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  // a force render hack :)\n  const [_, forceRender] = useState([])\n\n  const timer = useMemo(() => new Timer(), [])\n\n  const handleChange = e => {\n    console.log(e)\n    const minutes = e.target.value\n    const miliseconds = convertMinutestoMilliseconds(minutes)\n    setTimeInMinutes(minutes)\n    setTimeInMiliseconds(miliseconds)\n  }\n\n  const handlePlay = () => {\n    if (timer.status === &quot;paused&quot;) {\n      timer.resume()\n      return\n    }\n    timer.start(timeInMiliseconds)\n  }\n\n  const handlePause = () => {\n    timer.pause()\n    forceRender([])\n  }\n\n  const handleRewind = () => {\n    timer.stop()\n    setTimeInMinutes(5)\n    setTimeInMiliseconds(convertMinutestoMilliseconds(5))\n    setTimeLeft({ seconds: &quot;00&quot;, minutes: &quot;00&quot; })\n  }\n\n  useEffect(() => {\n    timer.on(&quot;tick&quot;, ms => {\n      setTimeInMiliseconds(ms)\n\n      return () => {\n        timer.removeAllListeners()\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    setTimeLeft(convertMillisecondsToTime(timeInMiliseconds))\n  }, [timeInMiliseconds])\n\n  return (\n    <div>\n      <h2>Pomodoro Clock!</h2>\n      <div>\n        {timeLeft.minutes}:{timeLeft.seconds}\n      </div>\n      <input onChange={handleChange} type=&quot;text&quot; value={timeInMinutes} />\n\n      <button onClick={handlePause}>Pause</button>\n\n      <button onClick={handlePlay}>Play</button>\n\n      <button onClick={handleRewind}>Rewind</button>\n    </div>\n  )\n}\n\nrender(<App />, document.getElementById(&quot;root&quot;))`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> useState<span class=\"token punctuation\">,</span> useMemo<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> render <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n<span class=\"token keyword\">import</span> Timer <span class=\"token keyword\">from</span> <span class=\"token string\">\"tiny-timer\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./style.css\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMinutestoMilliseconds</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">minutes</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// adding 1 second to \"show the 00:00\"</span>\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>minutes <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1000</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">convertMillisecondsToTime</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">ms</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> timeAPI <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">MINUTES</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SECONDS</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ms <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      minutes<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      seconds<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">00</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span><span class=\"token punctuation\">)</span>\n  ms <span class=\"token operator\">%=</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">MINUTES</span>\n  <span class=\"token comment\">// substracting 1 to show the \"00:00\"</span>\n  <span class=\"token keyword\">let</span> seconds <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>ms <span class=\"token operator\">/</span> timeAPI<span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seconds <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    seconds <span class=\"token operator\">=</span> seconds <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    minutes<span class=\"token operator\">:</span> minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    seconds<span class=\"token operator\">:</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMinutes<span class=\"token punctuation\">,</span> setTimeInMinutes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeInMiliseconds<span class=\"token punctuation\">,</span> setTimeInMiliseconds<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>timeLeft<span class=\"token punctuation\">,</span> setTimeLeft<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// a force render hack :)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>_<span class=\"token punctuation\">,</span> forceRender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> timer <span class=\"token operator\">=</span> <span class=\"token function\">useMemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> minutes <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n    <span class=\"token keyword\">const</span> miliseconds <span class=\"token operator\">=</span> <span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span>minutes<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span>miliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePlay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"paused\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      timer<span class=\"token punctuation\">.</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>timeInMiliseconds<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handlePause</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">forceRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleRewind</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMinutes</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span><span class=\"token function\">convertMinutestoMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setTimeLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> seconds<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span><span class=\"token punctuation\">,</span> minutes<span class=\"token operator\">:</span> <span class=\"token string\">\"00\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    timer<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tick\"</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">ms</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeInMiliseconds</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        timer<span class=\"token punctuation\">.</span><span class=\"token function\">removeAllListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeLeft</span><span class=\"token punctuation\">(</span><span class=\"token function\">convertMillisecondsToTime</span><span class=\"token punctuation\">(</span>timeInMiliseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>timeInMiliseconds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pomodoro Clock!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>minutes<span class=\"token punctuation\">}</span><span class=\"token plain-text\">:</span><span class=\"token punctuation\">{</span>timeLeft<span class=\"token punctuation\">.</span>seconds<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleChange<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>timeInMinutes<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePause<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Pause</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handlePlay<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Play</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleRewind<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Rewind</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">App</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Ejercicio completo aquí:</p>\n<p><a href=\"https://stackblitz.com/edit/react-nft7ra\">https://stackblitz.com/edit/react-nft7ra</a></p>","excerpt":"¿Qué son los ciclos de vida en React? Se podrían definir como una serie de métodos que son invocados en diferentes estados de la existencia del componente…","frontmatter":{"title":"¿Cuáles son los nuevos hooks que se utilizan para los ciclos de vida? y ¿Como usarlos en react?","description":null,"featuredImage":{"childImageSharp":{"fluid":{"src":"/static/f804366f4e9acaeb386e1ff5ac81300a/ee604/life-cycles-and-hooks-es.png"},"resize":{"src":"/static/f804366f4e9acaeb386e1ff5ac81300a/f3583/life-cycles-and-hooks-es.png","height":675,"width":1200}}}},"fields":{"langKey":"es"}}},"pageContext":{"slug":"/es/blog/life-cycles-and-hooks/","langKey":"es"}}}