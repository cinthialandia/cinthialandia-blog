{"componentChunkName":"component---src-templates-blog-post-js","path":"/es/blog/hooks/","result":{"data":{"markdownRemark":{"html":"<h2>¿Que son Hooks?</h2>\n<p>Los hooks son funciones que te permiten mantener estado y reaccionar a ciclos de los componentes funcionales.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const [accion, setAccion] = useState(&quot;saludar&quot;)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>accion<span class=\"token punctuation\">,</span> setAccion<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>La sintaxis del hook es la siguiente, <code class=\"language-text\">useState</code> es una API de react la cual es un array desestructurado, que trae como primer valor un variable, donde se guardará el valor del estado, y una segunda variable que es una función que nos permite actualizar el estado a cualquier valor que queramos, todo esto es igualado al <code class=\"language-text\">useState</code> que nos facilita un valor por defecto del estado.</p>\n<h2>¿Por qué se crearon los hooks?</h2>\n<h3>Componentes con lógicas complicadas hace que sea más difícil de entender</h3>\n<p>cuando mantenemos componentes con distintos tipos de ciclos de vida y extensa lógica, son más propensos a bugs o inconsistencias, con los hooks se divide en pequeñas funciones basada en cómo la data está relacionada.</p>\n<h3>Clases confunden a las personas y las máquinas</h3>\n<p><code class=\"language-text\">this</code> es una sintaxis que tienes que entender a profundidad, y para utilizarlo con componentes de clases, representa una cantidad de código más amplia. Hooks pueden ser utilizados en componentes funcionales, haciendo menos código y menos complejidad al mismo.</p>\n<h2>Hooks y estados</h2>\n<p>Los Hooks han sido creados para que los componentes funcionales puedan manejar un estado, y el mismo nos introduce en su sintaxis una nueva API llamada <code class=\"language-text\">useState</code>, la cual te permite adicionar un estado al componente funcional.</p>\n<p>Para mas información sobre componentes funcionales y estado, <a href=\"/es/blog/state/\">aquí</a>.</p>\n<h2>Hooks y ciclos de vida</h2>\n<p>Hooks nos trae una nueva API para el manejo de los ciclos de vida, llamados <code class=\"language-text\">useEffect</code>, que sería la combinación de los ciclos de vida <code class=\"language-text\">componentDidMount</code>, <code class=\"language-text\">componentDidUpdate</code>, y <code class=\"language-text\">componentWillUnmountut</code> utilizados en componentes de clases.</p>\n<p>Para mas información sobre componentes funcionales y ciclos de vida, <a href=\"/es/blog/life-cyles-and-hooks/\">aquí</a>.</p>\n<h2>Reglas de Hooks</h2>\n<ul>\n<li>Los <code class=\"language-text\">hooks</code> no pueden ser llamados, dentro de loops, condiciones y funciones anidadas.</li>\n<li>Los <code class=\"language-text\">hooks</code> deben ser llamados en el mismo orden cada vez que sean llamados.</li>\n<li>Hooks solo pueden llamados solamente desde componentes de <code class=\"language-text\">React</code></li>\n</ul>\n<h2>Crea tus propios hooks</h2>\n<p><code class=\"language-text\">Hooks</code> personalizados, te permiten crear una funcionalidad que puede ser reutilizada a través de diferentes componentes. Lo que hace a un <code class=\"language-text\">hook</code> sea personalizado, es que es una función que utiliza otros.</p>\n<p><code class=\"language-text\">Hooks</code>, por convención el nombre de la función deberá empezar con “use”, esto para poder agilizar la identificación de hooks en el código de funciones comunes.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { useState } from &quot;react&quot;\n\nconst useGreeting = () => {\n  const [action, setAction] = useState(&quot;saludar&quot;)\n\n  const phrases = {\n    saludar: &quot;hola, como estas?&quot;,\n    despedir: &quot;chao!!!&quot;,\n  }\n\n  const toggleAction = () => {\n    if (action === &quot;saludar&quot;) {\n      setAction(&quot;despedir&quot;)\n    } else {\n      setAction(&quot;saludar&quot;)\n    }\n  }\n\n  return [{ action, phrase: phrases[accion] }, toggleAction]\n}\n\nexport const FunctionalComponent1 = () => {\n  const [state, toggleGreeting] = useGreeting()\n\n  return (\n    <div>\n      <h2>FunctionalComponent1</h2>\n      <p>Estado: {state.action}</p>\n      <p>Frase: {state.phrase}</p>\n      <button onClick={toggleGreeting}>Toggle</button>\n    </div>\n  )\n}\n\nexport const FunctionalComponent2 = () => {\n  const [state, toggleState] = useGreeting()\n\n  return (\n    <div>\n      <h2>FunctionalComponent2</h2>\n      <p>Estado: {state.action}</p>\n      <p>Frase: {state.phrase}</p>\n      <button onClick={toggleGreeting}>Toggle</button>\n    </div>\n  )\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useGreeting</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>action<span class=\"token punctuation\">,</span> setAction<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> phrases <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    saludar<span class=\"token operator\">:</span> <span class=\"token string\">\"hola, como estas?\"</span><span class=\"token punctuation\">,</span>\n    despedir<span class=\"token operator\">:</span> <span class=\"token string\">\"chao!!!\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">toggleAction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action <span class=\"token operator\">===</span> <span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"despedir\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> action<span class=\"token punctuation\">,</span> phrase<span class=\"token operator\">:</span> phrases<span class=\"token punctuation\">[</span>accion<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> toggleAction<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FunctionalComponent1</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> toggleGreeting<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">FunctionalComponent1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Estado: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Frase: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>phrase<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleGreeting<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Toggle</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">FunctionalComponent2</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> toggleState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">FunctionalComponent2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Estado: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Frase: </span><span class=\"token punctuation\">{</span>state<span class=\"token punctuation\">.</span>phrase<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>toggleGreeting<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Toggle</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, realizamos el <code class=\"language-text\">hook</code> personalizado, <code class=\"language-text\">useStado</code> el cual maneja un estado con accion por defecto, y tiene una funcion <code class=\"language-text\">toggleState</code> que actualiza el valor de este, esta funcion realiza una logica de mostrar una saludo dependiendo del valor de estado, y este es utilizado en nuestros 2 componentes funcionales, compartiendo la logica e informacion del estado de nuestro <code class=\"language-text\">useStado</code> para ser utilizado por otros hooks.</p>\n<h2>Los hooks llegaron para solventar algunos problemas que se encontraban en React.</h2>\n<h3>Dificultad de reutilizar la lógica del estado entre componentes</h3>\n<p>Antes de los hooks se tenían que utilizar patrones como render props y higher-order-components para solventar estos casos, con los hooks se puede extraer la lógica del estado del componente, se puede usar de manera independiente y ser reutilizada, es decir permite compartir información sin tener que realizar cambios drásticos al componente.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { Component } from &quot;react&quot;\n\nconst phrases = {\n  saludar: &quot;hola, como estas?&quot;,\n  despedir: &quot;chao!!!&quot;,\n}\n\nexport class ClassComponent1 extends Component {\n  state = {\n    estado: &quot;saludar&quot;,\n  }\n\n  handleToggle = () => {\n    if (this.state.estado === &quot;saludar&quot;) {\n      this.setState({ estado: &quot;despedir&quot; })\n    } else {\n      this.setState({ estado: &quot;saludar&quot; })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>ClassComponent1</h2>\n        <p>Estado: {this.state.estado}</p>\n        <p>Frase: {phrases[this.state.estado]}</p>\n        <button onClick={this.handleToggle}>Toggle</button>\n      </div>\n    )\n  }\n}\n\nexport class ClassComponent2 extends Component {\n  state = {\n    estado: &quot;saludar&quot;,\n  }\n\n  handleToggle = () => {\n    if (this.state.estado === &quot;saludar&quot;) {\n      this.setState({ estado: &quot;despedir&quot; })\n    } else {\n      this.setState({ estado: &quot;saludar&quot; })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>ClassComponent2</h2>\n        <p>Estado: {this.state.estado}</p>\n        <p>Frase: {phrases[this.state.estado]}</p>\n        <button onClick={this.handleToggle}>Toggle</button>\n      </div>\n    )\n  }\n}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n\n<span class=\"token keyword\">const</span> phrases <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  saludar<span class=\"token operator\">:</span> <span class=\"token string\">\"hola, como estas?\"</span><span class=\"token punctuation\">,</span>\n  despedir<span class=\"token operator\">:</span> <span class=\"token string\">\"chao!!!\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassComponent1</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    estado<span class=\"token operator\">:</span> <span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">handleToggle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado <span class=\"token operator\">===</span> <span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> estado<span class=\"token operator\">:</span> <span class=\"token string\">\"despedir\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> estado<span class=\"token operator\">:</span> <span class=\"token string\">\"saludar\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ClassComponent1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Estado: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Frase: </span><span class=\"token punctuation\">{</span>phrases<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Toggle</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassComponent2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    estado<span class=\"token operator\">:</span> <span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">handleToggle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado <span class=\"token operator\">===</span> <span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> estado<span class=\"token operator\">:</span> <span class=\"token string\">\"despedir\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> estado<span class=\"token operator\">:</span> <span class=\"token string\">\"saludar\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">ClassComponent2</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Estado: </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Frase: </span><span class=\"token punctuation\">{</span>phrases<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>estado<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleToggle<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Toggle</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejercicio,tenemos la misma lógica de nuestro ejemplo anterior, pero declarada en un componente de clase, si quisiéramos utilizar la lógica declarada y la información del estado, deberíamos utilizar patrones para poder hacerlo de manera más interactiva, en este caso, copiamos el componente completo, ya que en nuestro ejercicio queremos 2 componentes que hagan lo mismo.</p>","excerpt":"¿Que son Hooks? Los hooks son funciones que te permiten mantener estado y reaccionar a ciclos de los componentes funcionales. La sintaxis del hook es la…","frontmatter":{"title":"¿Qué son los hooks? ¿Para qué se utilizan en react?","description":null,"featuredImage":{"childImageSharp":{"fluid":{"src":"/static/f08205c27136ae7e9d4a8e18c32d587b/ee604/hooks.png"},"resize":{"src":"/static/f08205c27136ae7e9d4a8e18c32d587b/f3583/hooks.png","height":675,"width":1200}}}},"fields":{"langKey":"es"}}},"pageContext":{"slug":"/es/blog/hooks/","langKey":"es"}}}