{"componentChunkName":"component---src-templates-blog-post-js","path":"/es/blog/object/","result":{"data":{"markdownRemark":{"html":"<h1>¿Que es un objeto?</h1>\n<p>Un objeto literal en javascript es un es un tipo de data declarada con una variable que es utilizada para almacenar colección de ítems con valores (keys y values). Los objetos pueden ser modificados sus propiedades o métodos pueden ser declarados de manera arbitraria sin ningún tipo de orden.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {}`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>En este ejemplo podemos observar que la sintaxis del objeto es la declaración de la variable <code class=\"language-text\">const</code>, seguido por el nombre del objeto <code class=\"language-text\">objetito</code> y luego la declaración de llaves <code class=\"language-text\">{}</code>, en las se encontrarán todas las propiedades del objeto.</p>\n<h2>Propiedades</h2>\n<p>Las propiedades de un objeto literal se definen como la unión del nombre y valor (key y value), mediante el nombre del mismo se podrá acceder a las propiedades del objeto.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  key: &quot;value&quot;,\n}\n\nconsole.log(obj.key) // 'value'`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'value'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo podemos observar que la propiedad de nuestro <code class=\"language-text\">objetito</code> es <code class=\"language-text\">key: “value”</code>, y que para acceder a esta propiedad y su valor en específico, debemos utilizar el nombre o key.</p>\n<h2>Métodos</h2>\n<p>Los métodos son funciones que están asociadas al objeto. Estas funciones son asignadas como propiedad del objeto y es definida al igual que una función normal. Para tener acceso a un método de un objeto, se debe utilizar el nombre de objeto, seguido por el nombre de la propiedad (key) que es el nombre de la función.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  key: &quot;value&quot;,\n  metodo: function () {\n    console.log(&quot;Hola soy un metodo!!!&quot;)\n  },\n}\n\nconsole.log(obj.key) // 'value'\nobjetito.metodo() // 'Hola soy un metodo!!!`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">metodo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hola soy un metodo!!!\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'value'</span>\nobjetito<span class=\"token punctuation\">.</span><span class=\"token function\">metodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Hola soy un metodo!!!</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, tenemos nuestro ejercicio anterior y ahora agregamos a nuestro <code class=\"language-text\">objetito</code> el método <code class=\"language-text\">function</code> el cual imprime en consola un texto, este método es declarado como otra propiedad del objeto, siendo el nombre de la función <code class=\"language-text\">metodo</code> y su valor la ejecución de la función.</p>\n<h2>Keys y Values</h2>\n<p>Como dijimos anteriormente, keys y values son el conjunto de propiedades de un objeto donde <code class=\"language-text\">key</code> es el nombre de la propiedad del mismo y <code class=\"language-text\">value</code> es el valor de esa propiedad.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  key: &quot;value&quot;,\n  metodo: function () {\n    console.log(&quot;Hola soy un metodo!!!&quot;)\n  },\n  nombre: &quot;Britney&quot;,\n}\n\nconsole.log(obj.key) // 'value'\nobjetito.metodo() // 'Hola soy un metodo!!!'\nconsole.log(objetito.nombre) // 'Britney'`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">metodo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hola soy un metodo!!!\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Britney\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'value'</span>\nobjetito<span class=\"token punctuation\">.</span><span class=\"token function\">metodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Hola soy un metodo!!!'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Britney'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Seguimos con el ejemplo anterior y podemos ver 3 propiedades en nuestro objeto, nuestra última propiedad declarada tiene como key <code class=\"language-text\">nombre</code> y cómo value <code class=\"language-text\">Britney</code>.</p>\n<h1>Desestructurando propiedades del objeto</h1>\n<p>La desestructuración es una sintaxis en javascript que se utiliza para extraer valores de arrays o propiedades de un objeto y convertirlos en variables.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Adele&quot;,\n  edad: 32,\n  trabajo: &quot;cantante&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\nconst { nombre, edad, saludar } = objetito\nconsole.log(nombre, edad) // 'Adele' 32\nsaludar() // 'Hola soy Adele y soy cantante'`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Adele\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"cantante\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> nombre<span class=\"token punctuation\">,</span> edad<span class=\"token punctuation\">,</span> saludar <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> objetito\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nombre<span class=\"token punctuation\">,</span> edad<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Adele' 32</span>\n<span class=\"token function\">saludar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Hola soy Adele y soy cantante'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos en nuestro <code class=\"language-text\">objetito</code> los datos de una persona en nuestras propiedades y tenemos la desestructuración del objeto. La sintaxis de la misma se constituye de esta manera: declaramos const (o let) y entre llaves aquellas propiedades que se quieran extraer, en este caso, <code class=\"language-text\">nombre</code> <code class=\"language-text\">edad</code> y <code class=\"language-text\">saludar</code> y esto lo igualamos al nombre del objeto. Hecho esto las propiedades ahora son variables, y se pueden acceder a ellas sin necesidad de acceder al objeto.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Adele&quot;,\n  edad: 32,\n  trabajo: &quot;cantante&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\nconst { nombre: nombreProfesional, edad, saludar } = objetito\nconsole.log(nombreProfesional, edad) // 'Adele' 32\nsaludar() // 'Hola soy Adele y soy cantante'`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Adele\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"cantante\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> nombre<span class=\"token operator\">:</span> nombreProfesional<span class=\"token punctuation\">,</span> edad<span class=\"token punctuation\">,</span> saludar <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> objetito\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nombreProfesional<span class=\"token punctuation\">,</span> edad<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Adele' 32</span>\n<span class=\"token function\">saludar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Hola soy Adele y soy cantante'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>¿Es posible cambiar el nombre de la variable? Si lo es, en este ejemplo podemos observar, que después del nombre de la variable declaramos 2 puntos y el nuevo nombre de la variable, en este caso nombre ahora es <code class=\"language-text\">nombreProfesional</code></p>\n<h1>Adicionando y actualizando las propiedades de un objeto</h1>\n<h2>Cómo acceder a un objeto</h2>\n<p>Hasta ahora hemos aprendido que es un objeto, sus propiedades y su estructuración pero ¿Cómo accedemos a él y que debemos tener en cuenta?</p>\n<ol>\n<li>Si sabemos el nombre de la propiedad accedemos declarando el nombre del objeto seguido de punto y el nombre de la propiedad.</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\nconsole.log(objetito.nombre) // 'Meredith Grey'\nconsole.log(objetito.edad) // 32`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Meredith Grey'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">.</span>edad<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 32</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos los datos de una persona en nuestro objeto y si queremos acceder a estos datos, declaramos el nombre del objeto en este caso <code class=\"language-text\">objetito</code> seguido del nombre de la propiedad en este caso <code class=\"language-text\">nombre</code> y nos da como resultado el valor que sería el nombre de la persona.</p>\n<ol start=\"2\">\n<li>Si el nombre de la propiedad tiene caracteres especiales o espacio, podemos acceder utilizando corchetes, declarando el nombre del objeto seguido de los corchetes y dentro de ellos el nombre de la propiedad.</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\nconsole.log(objetito.nombre) // 'Meredith Grey'\nconsole.log(objetito.edad) // 32\nconsole.log(objetito[&quot;saludar&quot;]) // [Function: saludar]`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'Meredith Grey'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">.</span>edad<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 32</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">[</span><span class=\"token string\">\"saludar\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// [Function: saludar]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos los datos anteriores, y para acceder a nuestra propiedad <code class=\"language-text\">saludar</code> podemos utilizar la sintaxis nombre del objeto seguido de los corchetes y dentro de este el string <code class=\"language-text\">”saludar”</code> dando como resultado el valor.</p>\n<ol start=\"3\">\n<li>Si el nombre de la propiedad se encuentra dentro de una variable, es necesario utilizar corchetes para acceder a la misma.</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\nlet prop = &quot;edad&quot;\nconsole.log(objetito[prop]) // 32\nprop = &quot;trabajo&quot;\nconsole.log(objetito[prop]) // Cirujana`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> prop <span class=\"token operator\">=</span> <span class=\"token string\">\"edad\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 32</span>\nprop <span class=\"token operator\">=</span> <span class=\"token string\">\"trabajo\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Cirujana</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Seguimos con el ejemplo anterior y vemos que tenemos una variable llamada prop la cual tiene como valor el string <code class=\"language-text\">“edad”</code>. Si queremos acceder a objtetito con la variable debemos utilizar corchetes y éste evaluará la expresión de esa variable, en este caso esa expresión es el nombre de la propiedad y nos trae como resultado en la consola el valor de la misma.</p>\n<h2>Cómo actualizar un objeto</h2>\n<p>Si queremos actualizar las propiedades de un objeto, debemos tener en cuenta que las mismas reglas para acceder a un objeto son aplicadas también cuando actualizamos una propiedad. La sintaxis es: el nombre del objeto seguido de punto o corchetes según sea el caso más el nombre de la propiedad e igualamos todo esto con el valor actualizado.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\nobjetito.nombre = &quot;Mer Grey&quot;\nobjetito[&quot;edad&quot;] = 33\nconsole.log(objetito) // {\n//   nombre: 'Mer Grey',\n//   edad: 33,\n//   trabajo: 'Cirujana',\n//   saludar: [Function: saludar]\n// }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nobjetito<span class=\"token punctuation\">.</span>nombre <span class=\"token operator\">=</span> <span class=\"token string\">\"Mer Grey\"</span>\nobjetito<span class=\"token punctuation\">[</span><span class=\"token string\">\"edad\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">33</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   nombre: 'Mer Grey',</span>\n<span class=\"token comment\">//   edad: 33,</span>\n<span class=\"token comment\">//   trabajo: 'Cirujana',</span>\n<span class=\"token comment\">//   saludar: [Function: saludar]</span>\n<span class=\"token comment\">// }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos un objeto con los datos de una persona y queremos cambiar el nombre y edad, declaramos el nombre del objeto <code class=\"language-text\">objetito</code> seguido de punto y nombre de la propiedad <code class=\"language-text\">nombre</code>, todo esto igualado al nuevo valor a reemplazar <code class=\"language-text\">Mer Grey</code>.</p>\n<h2>Adicionar una propiedad en un objeto</h2>\n<p>Para agregar propiedades a un objeto se tiene que tener en cuenta que las mismas reglas para acceder son las mismas para actualizar y adicionar propiedades en un objeto. La sintaxis es: el nombre del objeto seguido de punto o corchetes según sea el caso y todo eso deberá ser igualado al nuevo valor.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  pasatiempo: &quot;leer, cocinar, ver television&quot;,\n  comida: &quot;Pizza y pasta&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\nconst chat = function () {\n  console.log(\\`me gusta \\${pasatiempos} y comer \\${comida}\\`)\n}\n\nobjetito.hijos = 3\nobjetito[&quot;personal&quot;] = chat\nconsole.log(objetito) // {\n//   nombre: 'Meredith Grey',\n//   edad: 32,\n//   trabajo: 'Cirujana',\n//   pasatiempo: 'leer, cocinar, ver television',\n//   comida: 'Pizza y pasta',\n//   saludar: [Function: saludar],\n//   hijos: 3,\n//   personal: [Function: chat]\n// }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  pasatiempo<span class=\"token operator\">:</span> <span class=\"token string\">\"leer, cocinar, ver television\"</span><span class=\"token punctuation\">,</span>\n  comida<span class=\"token operator\">:</span> <span class=\"token string\">\"Pizza y pasta\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">chat</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">me gusta </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pasatiempos<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y comer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>comida<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nobjetito<span class=\"token punctuation\">.</span>hijos <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nobjetito<span class=\"token punctuation\">[</span><span class=\"token string\">\"personal\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> chat\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   nombre: 'Meredith Grey',</span>\n<span class=\"token comment\">//   edad: 32,</span>\n<span class=\"token comment\">//   trabajo: 'Cirujana',</span>\n<span class=\"token comment\">//   pasatiempo: 'leer, cocinar, ver television',</span>\n<span class=\"token comment\">//   comida: 'Pizza y pasta',</span>\n<span class=\"token comment\">//   saludar: [Function: saludar],</span>\n<span class=\"token comment\">//   hijos: 3,</span>\n<span class=\"token comment\">//   personal: [Function: chat]</span>\n<span class=\"token comment\">// }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo estamos agregando las propiedades <code class=\"language-text\">hijos</code> y <code class=\"language-text\">personal</code> al objeto, declaramos el nombre del objeto más el nombre de la propiedad igualado al valor en este caso 3.</p>\n<h1>Eliminar propiedades de un objeto</h1>\n<p>Para eliminar la propiedad de un objeto se puede realizar de 2 maneras. La primera es utilizando el término <code class=\"language-text\">delete</code> seguido del nombre del objeto y la propiedad. La segunda es asignándole <code class=\"language-text\">undefined</code> como valor de la propiedad que se quiera eliminar.. En ambos casos se debe tener en cuenta usar punto o corchetes al momento de la declaración.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const objetito = {\n  nombre: &quot;Meredith Grey&quot;,\n  edad: 32,\n  trabajo: &quot;Cirujana&quot;,\n  pasatiempo: &quot;leer, cocinar, ver television&quot;,\n  comida: &quot;Pizza y pasta&quot;,\n  saludar: function () {\n    console.log(\\`Hola soy \\${objetito.nombre} y soy \\${objetito.trabajo}\\`)\n  },\n}\n\ndelete objetito.saludar\nobjetito.edad = undefined\n\nconsole.log(objetito) // {\n//  nombre: 'Meredith Grey',\n//  edad: undefined,\n//  trabajo: 'Cirujana',\n//  pasatiempo: 'leer, cocinar, ver television',\n//  comida: 'Pizza y pasta'\n// }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> objetito <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Meredith Grey\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  pasatiempo<span class=\"token operator\">:</span> <span class=\"token string\">\"leer, cocinar, ver television\"</span><span class=\"token punctuation\">,</span>\n  comida<span class=\"token operator\">:</span> <span class=\"token string\">\"Pizza y pasta\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">saludar</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hola soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> y soy </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>objetito<span class=\"token punctuation\">.</span>trabajo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">delete</span> objetito<span class=\"token punctuation\">.</span>saludar\nobjetito<span class=\"token punctuation\">.</span>edad <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objetito<span class=\"token punctuation\">)</span> <span class=\"token comment\">// {</span>\n<span class=\"token comment\">//  nombre: 'Meredith Grey',</span>\n<span class=\"token comment\">//  edad: undefined,</span>\n<span class=\"token comment\">//  trabajo: 'Cirujana',</span>\n<span class=\"token comment\">//  pasatiempo: 'leer, cocinar, ver television',</span>\n<span class=\"token comment\">//  comida: 'Pizza y pasta'</span>\n<span class=\"token comment\">// }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo estamos removiendo las propiedades saludar y edad. La propiedad saludar la eliminamos de la primera manera, utilizando el término <code class=\"language-text\">delete</code> seguido de <code class=\"language-text\">objetito</code> y el nombre de la propiedad a eliminar. La segunda propiedad que eliminamos fue <code class=\"language-text\">edad</code> que utilizamos el nombre del objeto <code class=\"language-text\">objetito</code> seguido de la propiedad edad y le asignamos como valor <code class=\"language-text\">undefined</code>.</p>\n<h1>Shallow copies (copia parcial de un objeto)</h1>\n<p>Cuando un objeto es asignado a una variable, el objeto es creado en algún lugar en memoria y lo que se devuelve es la referencia (o dirección) a esa locación. Lo mismo ocurre cuando se asignan objetos como valor de una propiedad de otro object: el objeto es creado en memoria y lo que se guarda es la referencia.Esto puede causar comportamientos inesperados cuando se intenta crear una copia de un objeto. A este tipo de copias se le denomina “shallow copy”, o copia parcial:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const obj1 = {\n  nombre: &quot;Christina&quot;,\n  info: {\n    edad: 35,\n    trabajo: &quot;Cirujano&quot;,\n  },\n}\n\nconst obj2 = { ...obj1 } // shallow copy (copia parcial)\n\nobj2.nombre = &quot;Derek&quot; //solo modificaremos .nombre en obj2\nobj2.info.edad = 40 // oops! Esto modificó obj1.info.edad también!\n\nconsole.log(obj1) // { nombre: 'Christina', info: { edad: 40, job: Cirujano} }\nconsole.log(obj2) // { nombre: 'Derek', info: { edad: 40, job: Cirujano} }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Christina\"</span><span class=\"token punctuation\">,</span>\n  info<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    edad<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\n    trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujano\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1 <span class=\"token punctuation\">}</span> <span class=\"token comment\">// shallow copy (copia parcial)</span>\n\nobj2<span class=\"token punctuation\">.</span>nombre <span class=\"token operator\">=</span> <span class=\"token string\">\"Derek\"</span> <span class=\"token comment\">//solo modificaremos .nombre en obj2</span>\nobj2<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span>edad <span class=\"token operator\">=</span> <span class=\"token number\">40</span> <span class=\"token comment\">// oops! Esto modificó obj1.info.edad también!</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { nombre: 'Christina', info: { edad: 40, job: Cirujano} }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { nombre: 'Derek', info: { edad: 40, job: Cirujano} }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos un objeto con información de una persona y realizamos una copia utilizando la sintaxis spread la cual realiza una copia nueva del objeto sin alterar el objeto original y lo guardamos en nuestra nueva variable <code class=\"language-text\">obj2</code>. Ahora que tenemos nuestro nuevo objeto, cambiamos el valor la propiedad <code class=\"language-text\">name</code> dando como resultado <code class=\"language-text\">{name: “Derek”}</code> y cambiamos el valor de la propiedad <code class=\"language-text\">age</code> que se encuentra dentro del objeto <code class=\"language-text\">info</code> dando como resultado 40. Cuando imprimimos en consola los valores actuales de ambos objetos, podemos observar que nuestro objeto original ha cambiado la edad también, aun así cuando no lo hicimos de manera directa ¿Por que pasa esto? Al momento de realizar el spread, se hace hecho una copia parcial de todas las propiedades del objeto, pero aquellas propiedades dentro del objeto info aun siguen conectadas con el objeto original.</p>\n<h1>Deep object cloning (clonación de objeto)</h1>\n<p>Para obtener una copia real de un objeto es necesario recurrir a otra técnica llamada “deep cloning”, que consiste en visitar cada propiedad y crear una copia de cada objeto que se encuentre (incluyendo sus hijos), resultado en una copia que está completamente desconectada del objeto original:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const obj1 = {\n  nombre: &quot;Christina&quot;,\n  info: {\n    edad: 35,\n    trabajo: &quot;Cirujano&quot;,\n  },\n}\n\nconst obj3 = { ...obj1, info: { ...obj1.info } } // deep clone (copia profunda)\n\nobj3.nombre = &quot;Alex&quot; // solo modificara .nombre para obj3\nobj3.info.edad = 42 // esto solo modificara info.edad para obj3, copia profunda!\n\nconsole.log(obj1) // { nombre: 'Christina', info: { edad: 35, job: 'Cirujano' } }\n\nconsole.log(obj3) // { nombre: 'Alex', info: { edad: 42, job: 'Cirujano' } }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Christina\"</span><span class=\"token punctuation\">,</span>\n  info<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    edad<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\n    trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujano\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1<span class=\"token punctuation\">,</span> info<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj1<span class=\"token punctuation\">.</span>info <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token comment\">// deep clone (copia profunda)</span>\n\nobj3<span class=\"token punctuation\">.</span>nombre <span class=\"token operator\">=</span> <span class=\"token string\">\"Alex\"</span> <span class=\"token comment\">// solo modificara .nombre para obj3</span>\nobj3<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span>edad <span class=\"token operator\">=</span> <span class=\"token number\">42</span> <span class=\"token comment\">// esto solo modificara info.edad para obj3, copia profunda!</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { nombre: 'Christina', info: { edad: 35, job: 'Cirujano' } }</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span> <span class=\"token comment\">// { nombre: 'Alex', info: { edad: 42, job: 'Cirujano' } }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, tenemos nuestro <code class=\"language-text\">obj1</code> del último ejemplo y hacemos una copia de nuestro objeto con una extensión mientras hacemos el último, pero esta vez también vamos a hacer una copia de las propiedades del objeto de información con la propagación Declaramos otro valor para la propiedad llamada <code class=\"language-text\">Alex</code> y otro para la edad<code class=\"language-text\">42</code>. En el momento de imprimir la consola, podemos ver que <code class=\"language-text\">obj1</code> tiene la misma propiedad sin ninguna modificación y<code class=\"language-text\">obj3</code> ha modificado sus propiedades. ¿Por qué está pasando esto? Cuando realizamos la propagación en el objeto de información, hicimos una copia profunda del objeto en general e hicimos una desconexión total del original.</p>\n<h1>Combinar objetos</h1>\n<p>Si queremos unir 2 objetos podemos utilizar el método <code class=\"language-text\">**Object.assign()**</code> que se utiliza para copiar propiedades de un objeto (source) a otro objeto (target) y retorna el objeto target.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const obj1 = {\n  nombre: &quot;Christina&quot;,\n  edad: 35,\n}\n\nconst obj2 = {\n  trabajo: &quot;Cirujana&quot;,\n  estatus: &quot;Viuda&quot;,\n}\n\nconst obj3 = Object.assign(obj1, obj2)\nconsole.log(obj3)\n\n// {\n//   nombre: 'Christina',\n//   edad: 35,\n//   trabajo: 'Cirujana',\n//   estatus: Viuda,\n//   }\n//`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Christina\"</span><span class=\"token punctuation\">,</span>\n  edad<span class=\"token operator\">:</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  trabajo<span class=\"token operator\">:</span> <span class=\"token string\">\"Cirujana\"</span><span class=\"token punctuation\">,</span>\n  estatus<span class=\"token operator\">:</span> <span class=\"token string\">\"Viuda\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj3 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> obj2<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   nombre: 'Christina',</span>\n<span class=\"token comment\">//   edad: 35,</span>\n<span class=\"token comment\">//   trabajo: 'Cirujana',</span>\n<span class=\"token comment\">//   estatus: Viuda,</span>\n<span class=\"token comment\">//   }</span>\n<span class=\"token comment\">//</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, tenemos dos objetos con la información de las personas y queremos combinar ambos, por lo que utilizamos el método 'asignar'. Declaramos la nueva variable y el objetivo del objeto, que será nuestro <code class=\"language-text\">obj1</code> donde combinaremos los objetos. Finalmente, declaramos nuestro objeto <code class=\"language-text\">fuente</code> que va a estar dentro de nuestro objeto de destino<code class=\"language-text\">obj2</code>, todo esto nos dará el resultado de que <code class=\"language-text\">obj2</code> sea parte de una nueva propiedad.</p>\n<h1>Metodos estaticos</h1>\n<h2>Object.create()</h2>\n<p>Este método crea un nuevo objeto usando un objeto existente como el prototipo del nuevo objeto creado.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const sayHi = {\n  nombre: &quot;&quot;,\n  apellido: &quot;&quot;,\n  frase: &quot;&quot;,\n  printIntroduction: function () {\n    console.log(\n      \\`Mi nombre es \\${this.nombre} \\${this.apellido} and \\${this.frase}\\`\n    )\n  },\n}\n\nconst me = Object.create(sayHi)\nme.nombre = &quot;Britney&quot;\nme.apellido = &quot;Spears&quot;\nme.frase = &quot;it's britney b*tch!&quot;\nme.printIntroduction() //&quot;Mi nombre es Britney Spears and it's britney b*tch!&quot;\nconsole.log(me) /\n  { nombre: &quot;Britney&quot;, apellido: &quot;Spears&quot;, frase: &quot;it's britney b*tch!&quot; }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> sayHi <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  apellido<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  frase<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">printIntroduction</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Mi nombre es </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nombre<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>apellido<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> and </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>frase<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> me <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>sayHi<span class=\"token punctuation\">)</span>\nme<span class=\"token punctuation\">.</span>nombre <span class=\"token operator\">=</span> <span class=\"token string\">\"Britney\"</span>\nme<span class=\"token punctuation\">.</span>apellido <span class=\"token operator\">=</span> <span class=\"token string\">\"Spears\"</span>\nme<span class=\"token punctuation\">.</span>frase <span class=\"token operator\">=</span> <span class=\"token string\">\"it's britney b*tch!\"</span>\nme<span class=\"token punctuation\">.</span><span class=\"token function\">printIntroduction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"Mi nombre es Britney Spears and it's britney b*tch!\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span>\n  <span class=\"token punctuation\">{</span> nombre<span class=\"token operator\">:</span> <span class=\"token string\">\"Britney\"</span><span class=\"token punctuation\">,</span> apellido<span class=\"token operator\">:</span> <span class=\"token string\">\"Spears\"</span><span class=\"token punctuation\">,</span> frase<span class=\"token operator\">:</span> <span class=\"token string\">\"it's britney b*tch!\"</span> <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo creamos el objecto <code class=\"language-text\">me</code> a partir del objeto <code class=\"language-text\">sayHi</code> utilizando el método create.</p>\n<h2>Object.entries()</h2>\n<p>Este método recibe un objeto y retorna un array.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const obj1 = {\n  1: &quot;Rachel&quot;,\n  2: &quot;Ross&quot;,\n  3: &quot;Monica&quot;,\n  4: &quot;Phoebe&quot;,\n  5: &quot;chandler&quot;,\n}\n\nconst obj2 = Object.entries(obj1)\nconsole.log(obj2)\n\n// [\n//   [ '1', 'Rachel' ],\n//   [ '2', 'Ross' ],\n//   [ '3', 'Monica' ],\n//   [ '4', 'Phoebe' ],\n//   [ '5', 'chandler' ]\n// ]`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Rachel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ross\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Monica\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Phoebe\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token number\">5</span><span class=\"token operator\">:</span> <span class=\"token string\">\"chandler\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// [</span>\n<span class=\"token comment\">//   [ '1', 'Rachel' ],</span>\n<span class=\"token comment\">//   [ '2', 'Ross' ],</span>\n<span class=\"token comment\">//   [ '3', 'Monica' ],</span>\n<span class=\"token comment\">//   [ '4', 'Phoebe' ],</span>\n<span class=\"token comment\">//   [ '5', 'chandler' ]</span>\n<span class=\"token comment\">// ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo, tenemos un objeto con diferentes nombres, aplicamos el método <code class=\"language-text\">entries</code> y nos da como resultado un array.</p>\n<h2>Object.fromEntries()</h2>\n<p>Es un método que transforma una lista de par de <code class=\"language-text\">key-value</code> en un objeto.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const arrNames = [\n  [&quot;1&quot;, &quot;Sabrina&quot;],\n  [&quot;2&quot;, &quot;Harvey&quot;],\n  [&quot;3&quot;, &quot;Hilda&quot;],\n  [&quot;4&quot;, &quot;Zelda&quot;],\n]\n\nconst obj = Object.fromEntries(arrNames)\n\nconsole.log(obj)\n\n// { '1': 'Sabrina', '2': 'Harvey', '3': 'Hilda', '4': 'Zelda' }`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arrNames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sabrina\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Harvey\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hilda\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Zelda\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">fromEntries</span><span class=\"token punctuation\">(</span>arrNames<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// { '1': 'Sabrina', '2': 'Harvey', '3': 'Hilda', '4': 'Zelda' }</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>En este ejemplo tenemos un array de nombres y un número, aplicamos el método <code class=\"language-text\">fromEntries</code> y este nos retorna un objeto con key y values en este caso el key como el número y el value como el nombre.</p>\n<h2>Object.keys()</h2>\n<p>Es un método que retorna un array numerable de los nombres de las propiedades.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const doctorGouse = {\n  Gregory: &quot;House&quot;,\n  Alison: &quot;Cameron&quot;,\n  Lisa: &quot;Cuddy&quot;,\n  James: &quot;Wilson&quot;,\n  Eric: &quot;Foreman&quot;,\n  Robert: &quot;Chase&quot;,\n}\n\nconsole.log(Object.keys(doctorHouse))\n// [ 'Gregory', 'Alison', 'Lisa', 'James', 'Eric', 'Robert' ]`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> doctorGouse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  Gregory<span class=\"token operator\">:</span> <span class=\"token string\">\"House\"</span><span class=\"token punctuation\">,</span>\n  Alison<span class=\"token operator\">:</span> <span class=\"token string\">\"Cameron\"</span><span class=\"token punctuation\">,</span>\n  Lisa<span class=\"token operator\">:</span> <span class=\"token string\">\"Cuddy\"</span><span class=\"token punctuation\">,</span>\n  James<span class=\"token operator\">:</span> <span class=\"token string\">\"Wilson\"</span><span class=\"token punctuation\">,</span>\n  Eric<span class=\"token operator\">:</span> <span class=\"token string\">\"Foreman\"</span><span class=\"token punctuation\">,</span>\n  Robert<span class=\"token operator\">:</span> <span class=\"token string\">\"Chase\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>doctorHouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [ 'Gregory', 'Alison', 'Lisa', 'James', 'Eric', 'Robert' ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Tenemos un objeto con el nombres y apellidos, nombres como keys, apellidos como values y aplicamos el método <code class=\"language-text\">Object.keys</code> al objeto el cual retorna un array con todos los keys del mismo.</p>\n<h2>Object.values()</h2>\n<p>Es un método que retorna un array con los valores de la propiedad del objeto.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const doctorHouse = {\n  gregory: &quot;House&quot;,\n  Alison: &quot;Cameron&quot;,\n  Lisa: &quot;Cuddy&quot;,\n  James: &quot;Wilson&quot;,\n  Eric: &quot;Foreman&quot;,\n  Robert: &quot;Chase&quot;,\n}\n\nconsole.log(Object.values(doctorHouse))\n// [ 'House', 'Cameron', 'Cuddy', 'Wilson', 'Foreman', 'Chase' ]`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> doctorHouse <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  gregory<span class=\"token operator\">:</span> <span class=\"token string\">\"House\"</span><span class=\"token punctuation\">,</span>\n  Alison<span class=\"token operator\">:</span> <span class=\"token string\">\"Cameron\"</span><span class=\"token punctuation\">,</span>\n  Lisa<span class=\"token operator\">:</span> <span class=\"token string\">\"Cuddy\"</span><span class=\"token punctuation\">,</span>\n  James<span class=\"token operator\">:</span> <span class=\"token string\">\"Wilson\"</span><span class=\"token punctuation\">,</span>\n  Eric<span class=\"token operator\">:</span> <span class=\"token string\">\"Foreman\"</span><span class=\"token punctuation\">,</span>\n  Robert<span class=\"token operator\">:</span> <span class=\"token string\">\"Chase\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>doctorHouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [ 'House', 'Cameron', 'Cuddy', 'Wilson', 'Foreman', 'Chase' ]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Tenemos el mismo ejemplo que el anterior, esta vez aplicamos el método <code class=\"language-text\">Object.values</code> y esto nos dará como resultado los valores de las propiedades los apellidos en este caso.</p>\n<h3>Referencias</h3>\n<p><a href=\"https://www.freecodecamp.org/news/copying-stuff-in-javascript-how-to-differentiate-between-deep-and-shallow-copies-b6d8c1ef09cd/#:~:text=A%20deep%20copy%20means%20that,into%20how%20JavaScript%20stores%20values\">https://www.freecodecamp.org/news/copying-stuff-in-javascript-how-to-differentiate-between-deep-and-shallow-copies-b6d8c1ef09cd/#:~:text=A%20deep%20copy%20means%20that,into%20how%20JavaScript%20stores%20values</a>.\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/fromEntries</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values</a></p>\n<p><a href=\"https://ultimatecourses.com/courses/javascript\">https://ultimatecourses.com/courses/javascript</a></p>","excerpt":"¿Que es un objeto? Un objeto literal en javascript es un es un tipo de data declarada con una variable que es utilizada para almacenar colección de ítems con…","frontmatter":{"title":"¿Qué es un objeto en javascript? y cuales son sus metodos?","description":null,"featuredImage":{"childImageSharp":{"fluid":{"src":"/static/58e96b92fb5523958bbb0468e59e8d01/ee604/objects-es.png"},"resize":{"src":"/static/58e96b92fb5523958bbb0468e59e8d01/f3583/objects-es.png","height":675,"width":1200}}}},"fields":{"langKey":"es"}}},"pageContext":{"slug":"/es/blog/object/","langKey":"es"}}}