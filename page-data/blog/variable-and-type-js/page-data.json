{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/variable-and-type-js/","result":{"data":{"markdownRemark":{"html":"<h2>What are variables?</h2>\n<p>Variables are containers with reusable data on it, basically a unit of storage in JavaScript.</p>\n<h2>Declare variables in JavaScript</h2>\n<p>The variables in JavaScript are declared with reserved words as <code class=\"language-text\">const</code>, <code class=\"language-text\">let</code> and <code class=\"language-text\">var</code>.</p>\n<h3>Let</h3>\n<p>Is a variable that allows you re assign their value as many times as necessary and their scope will be a block of code where the variable will be declared, in other words everything inside curly braces <code class=\"language-text\">{}</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`let newVariable`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> newVariable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>const</h3>\n<p>Is a variable that their name says constant, in other words <code class=\"language-text\">const</code> can’t be re assigned and and their scope is the same as let that the block of the code where is declared.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const newVariable;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newVariable<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>var</h3>\n<p>Is a variable that can be re-assigned and has the same behavior as <code class=\"language-text\">let</code>, but has an important difference, that does not depend on the block being declared, it depends on the scope of the functions that the variable was declared.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`var newVariable`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">var</span> newVariable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Variable initialization</h2>\n<p>After declaring a variable you must assign a value.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const newVariable = 0`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> newVariable <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Re assign a variable</h2>\n<p>It is possible assign a new value to a variable</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`let newVariable = 0\n\nnewVariable = 24`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">let</span> newVariable <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nnewVariable <span class=\"token operator\">=</span> <span class=\"token number\">24</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Declaration rules of variables</h2>\n<ol>\n<li>The name must start with letters (a to z), underscore (_), or a dollar sign ($).</li>\n<li>After the first letter, you can use numbers.</li>\n<li>The variables are case sensitive, in other words, <code class=\"language-text\">const x</code> and <code class=\"language-text\">const X</code> are different variables.</li>\n</ol>\n<h2>CamelCase convention</h2>\n<p>It is important to know that is not a rule is just a general convention, that variables should start with lowercase and if the variable name is a compound word, you should start the first word with upper case.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const wordCompound = 0`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> wordCompound <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>What is Hoisting?</h2>\n<p>Hoisting is the behavior of <code class=\"language-text\">var</code> variables and functions when those are physically moved to the top of the code, technically this is not literal, this happens at the moment when Js compiled and those are processed in a different order.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function hello(condition) {\n  if (condition) {\n    let nameToPrint = &quot;Cinthia&quot;\n    console.log(nameToPrint)\n  } else {\n    let nameToPrint = &quot;Gerardo&quot;\n    console.log(nameToPrint) // The console prints “Gerardo”\n  }\n\n  console.log(nameToPrint, &quot;outside of blocks&quot;) // The console prints  an error\n}\n\nhello(false)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Cinthia\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Gerardo\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span> <span class=\"token comment\">// The console prints “Gerardo”</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">,</span> <span class=\"token string\">\"outside of blocks\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// The console prints  an error</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We have a function that prints a name and depends on the param’s value (true or false), if it's true it will print <code class=\"language-text\">“Cinthia”</code> and it is false will print <code class=\"language-text\">“Gerardo”</code>, our 2 first <code class=\"language-text\">console.log</code> print the answer depending on the param, but the third shows an error, because the third <code class=\"language-text\">console.log</code> it is on the function's scope, no on the if's scope, so that <code class=\"language-text\">console.log</code> has no access to those value’s variable. This happens with the let and <code class=\"language-text\">const</code> variable.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`function hello(condition) {\n  if (condition) {\n    var nameToPrint = &quot;Cinthia&quot; // The console prints “Cinthia”\n    console.log(nameToPrint)\n  } else {\n    var nameToPrint = &quot;Gerardo&quot;\n    console.log(nameToPrint)\n  }\n\n  console.log(nameToPrint, &quot;outside of blocks&quot;) // The console prints  &quot;Gerardo&quot; &quot;outside of blocks&quot;\n}\n\nhello(true)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">condition</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Cinthia\"</span> <span class=\"token comment\">// The console prints “Cinthia”</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> nameToPrint <span class=\"token operator\">=</span> <span class=\"token string\">\"Gerardo\"</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nameToPrint<span class=\"token punctuation\">,</span> <span class=\"token string\">\"outside of blocks\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// The console prints  \"Gerardo\" \"outside of blocks\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>In this example, we change our argument to true and our example will print Cinthia, and changed our <code class=\"language-text\">let</code> for <code class=\"language-text\">var</code>, there we can observe that <code class=\"language-text\">var</code> variable are available in our function’s scope even if they were declared on the if’s scope, so our <code class=\"language-text\">console.log</code> has access and show a prints a the result.</p>\n<h2>Type of values</h2>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`Undefined: &quot;It is a primitive value that is assigned to a variable that does not identify its value&quot;\n\nBoolean: &quot;It is a value’s type of logic data that can be true or false&quot;\n\nNumber: &quot;It is a numeric data type&quot;\n\nString: &quot;It is a sequence of characters used to represent text&quot;&quot;\n\nNull:  &quot;It is a primitive value&quot;\n\nFunction: &quot;Is a javasCript procedure and set of statements  that performs a task or calculates a value&quot;\n\nObject: &quot;This is a type of data in Js and is used to store the collected information&quot;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">Undefined<span class=\"token operator\">:</span> <span class=\"token string\">\"It is a primitive value that is assigned to a variable that does not identify its value\"</span>\n\nBoolean<span class=\"token operator\">:</span> <span class=\"token string\">\"It is a value’s type of logic data that can be true or false\"</span>\n\nNumber<span class=\"token operator\">:</span> <span class=\"token string\">\"It is a numeric data type\"</span>\n\nString<span class=\"token operator\">:</span> <span class=\"token string\">\"It is a sequence of characters used to represent text\"</span>\"\n\nNull<span class=\"token operator\">:</span>  <span class=\"token string\">\"It is a primitive value\"</span>\n\nFunction<span class=\"token operator\">:</span> <span class=\"token string\">\"Is a javasCript procedure and set of statements  that performs a task or calculates a value\"</span>\n\nObject<span class=\"token operator\">:</span> <span class=\"token string\">\"This is a type of data in Js and is used to store the collected information\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Typeof</h2>\n<p>Is an operator that returns a string indicating what is the type of the operando not evaluated.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`console.log(typeof 42)\n// prints in console type: &quot;number&quot;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// prints in console type: \"number\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Truthy and Falsy Value</h2>\n<h3>Truthy</h3>\n<p>In Js, a truthy value is considered true in a <code class=\"language-text\">boolean</code> context.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`if (true)\nif ({})\nif ([])\nif (42)\nif (&quot;0&quot;)\nif (&quot;false&quot;)\nif (new Date())\nif (-42)\nif (12n)\nif (3.14)\nif (-3.14)\nif (Infinity)\nif (-Infinity)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"false\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">12n</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Falsy</h3>\n<p>Is a value that is considering false in a <code class=\"language-text\">boolean</code> context.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`False: The keyword false\n0: The number zero\n-0: The number negative zero\n0n: BigInt, when used as a boolean, follows the same rule as a Number. 0n is falsy.\n&quot;&quot;: Empty string value\nNull: null - the absence of any value\nUndefined: undefined - the primitive value\nNaN: NaN - not a number`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">False<span class=\"token operator\">:</span> The keyword <span class=\"token boolean\">false</span>\n<span class=\"token number\">0</span><span class=\"token operator\">:</span> The number zero\n<span class=\"token operator\">-</span><span class=\"token number\">0</span><span class=\"token operator\">:</span> The number negative zero\n<span class=\"token number\">0n</span><span class=\"token operator\">:</span> BigInt<span class=\"token punctuation\">,</span> when used <span class=\"token keyword\">as</span> a boolean<span class=\"token punctuation\">,</span> follows the same rule <span class=\"token keyword\">as</span> a Number<span class=\"token punctuation\">.</span> <span class=\"token number\">0n</span> is falsy<span class=\"token punctuation\">.</span>\n<span class=\"token string\">\"\"</span><span class=\"token operator\">:</span> Empty string value\nNull<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">-</span> the absence <span class=\"token keyword\">of</span> any value\nUndefined<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">-</span> the primitive value\n<span class=\"token number\">NaN</span><span class=\"token operator\">:</span> <span class=\"token number\">NaN</span> <span class=\"token operator\">-</span> not a number</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"What are variables? Variables are containers with reusable data on it, basically a unit of storage in JavaScript. Declare variables in JavaScript The variables…","frontmatter":{"title":"What are variables and what are their types in javascript?","description":null,"featuredImage":{"childImageSharp":{"fluid":{"src":"/static/37b6aeed85dcad46e93c720e9cc3aa39/ee604/variables.png"},"resize":{"src":"/static/37b6aeed85dcad46e93c720e9cc3aa39/f3583/variables.png","height":675,"width":1200}}}},"fields":{"langKey":"en"}}},"pageContext":{"slug":"/blog/variable-and-type-js/","langKey":"en"}}}